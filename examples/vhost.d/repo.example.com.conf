##
# Nexus3 service proxy settings
##

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name repo.example.com;

    include /etc/nginx/vhost.d/repo.example.com/*.conf;

    proxy_cache off;

    location / {
        # Avoid to get address resolve error when starting
        set $target http://<nexus3 ip>:<nexus3 web port>;
        proxy_pass $target;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name dcr.example.com;

    include /etc/nginx/vhost.d/dcr.example.com/*.conf;

    # Disable cache of assets
    proxy_cache            off;
    proxy_read_timeout     600;
    proxy_connect_timeout  600;

    client_max_body_size 500M;

    location / {
        if ($http_user_agent !~* "^docker/.+$") {
            return 301 $scheme://repo.example.com/#browse/browse/components:docker-public$request_uri;
        }

        set $nexus3 http://<nexus3 ip>;

        # docker pull dcr.example.com/xx-xx
        set $target $nexus3:<docker-public port>;

        # https://github.com/moby/moby/blob/7061b0f748c29ffd1e6852cdc5dd11f90840eb1c/daemon/logger/awslogs/cloudwatchlogs_test.go#L71
        # https://github.com/moby/moby/blob/master/client/image_pull.go
        # https://github.com/moby/moby/blob/master/client/image_push.go

        # NOTE: rewrite and proxy_pass should be put in the same block
        ## http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite
        # docker push dcr.example.com/xx-xx
        if ($request_method ~* "^HEAD|POST|PUT|DELETE|PATCH$") {
            set $target $nexus3:<docker-hosted port>;
        }

        proxy_pass $target;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name mvn.example.com;

    include /etc/nginx/vhost.d/mvn.example.com/*.conf;

    # Redirect to the maven repository (named as 'maven-public') of Nexus3
    location = / {
        return 302 $scheme://repo.example.com/#browse/browse/components:maven-public/;
    }
    # Redirect to the target asset of Nexus3
    location ~* ^/repository/maven-.+$ {
        return 301 $scheme://repo.example.com$request_uri;
    }

    # Disable cache of assets
    proxy_cache            off;
    proxy_read_timeout     300;
    proxy_connect_timeout  300;

    client_max_body_size 500M;

    location / {
        #access_by_lua_block {
        #    local cjson = require("cjson")
        #    -- Print the request headers
        #    ngx.log(ngx.DEBUG, ngx.var.request_uri..", "..cjson.encode(ngx.req.get_headers()))
        #}

        set $target http://<nexus3 ip>:<nexus3 web port>;

        # NOTE: rewrite and proxy_pass should be put in the same block
        ## http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite
        # we browse or `mvn compile`
        if ($request_method ~* "^GET|HEAD$") {
            rewrite ^/public/(.*)           /repository/maven-public/$1    break;
            rewrite ^/hosted/(.*)           /repository/maven-hosted/$1    break;
            rewrite ^/releases/(.*)         /repository/maven-hosted/$1    break;
            rewrite ^/snapshots/(.*)        /repository/maven-hosted/$1    break;
            proxy_pass      $target;
            break;
        }

        # `mvn deploy`
        if ($request_method ~* "^POST|PUT$") {
            rewrite ^/(releases|snapshots)/(.*)     /repository/maven-hosted-$1/$2   break;
            proxy_pass      $target;
            break;
        }
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name npm.example.com;

    include /etc/nginx/vhost.d/npm.example.com/*.conf;

    # Redirect to the npm repository (named as 'npm-public') of Nexus3
    location = / {
        return 302 $scheme://repo.example.com/#browse/browse/components:npm-public/;
    }
    # Redirect to the target asset of Nexus3
    location ~* ^/repository/npm-.+$ {
        return 301 $scheme://repo.example.com$request_uri;
    }

    # Disable cache of assets
    proxy_cache            off;
    proxy_read_timeout     60;
    proxy_connect_timeout  60;

    client_max_body_size 50M;

    location / {
        set $target http://<nexus3 ip>:<nexus3 web port>;

        # NOTE: rewrite and proxy_pass should be put in the same block
        ## http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite
        # we browse or `npm install`
        if ($request_method ~* "^GET$") {
            rewrite ^/(.+)      /repository/npm-public/$    break;
            proxy_pass      $target;
            break;
        }

        # `npm publish`
        if ($request_method ~* "^PUT|DELETE$") {
            rewrite ^/(.+)      /repository/npm-hosted/$1   break;
            proxy_pass      $target;
            break;
        }
    }
}
